name: Python application
on: push
jobs:
  Code_Verification:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: create Artifacts Folder
      run: mkdir -p work/artifacts
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install poetry
      run: |
        python -m pip install poetry==1.1.11
    - name: Configure poetry
      run: |
        python -m poetry config virtualenvs.in-project true
    
    - name: Install dependencies
      run: |
        python -m poetry install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        python -m poetry run python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --format=html --htmldir=work/artifacts/flake8-critical-report
        # check complexity
        python -m poetry run python -m flake8 . --format=html --htmldir=work/artifacts/flake8-complexity-report  --max-complexity 5
        
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        python -m poetry run python -m flake8 . --count --exit-zero --statistics --format=html --htmldir=work/artifacts/flake8-warning-report
    - name: Test with pytest
      run: |
        python -m poetry run python -m pytest
    - name: Collect Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: work/artifacts/